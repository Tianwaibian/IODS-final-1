boston_scaled=scale(Boston)
dist_eu=dist(boston_scaled,method='euclidean')
summary(dist_eu)
dist_man=dist(boston_scaled,method='manhattan')
summary(dist_man)
summary(boston_scaled)
dist_eu
km=kmeans(boston_scaled,centers = 3)
pairs(boston_scaled,col=km$cluster)
km=kmeans(boston_scaled,centers = 3)
pairs(boston_scaled[6:10],col=km$cluster)
pairs(boston_scaled,col=km$cluster)
k_max=10
twcss=sapply(1:k_max,function(k){kmeans(boston_scaled,k)$tot.withinss})
qplot(x=1:k_max,y=twcss,goem='line')
library(ggplot2)
k_max=10
twcss=sapply(1:k_max,function(k){kmeans(boston_scaled,k)$tot.withinss})
qplot(x=1:k_max,y=twcss,goem='line')
qplot(x=1:k_max,y=twcss,geom=line')
qplot(x=1:k_max,y=twcss,geom='line')
k_max=10
twcss=sapply(1:k_max,function(k){kmeans(boston_scaled,k)$tot.withinss})
qplot(x=1:k_max,y=twcss,geom='line')
set.seed(123)
set.seed(123)
k_max=10
twcss=sapply(1:k_max,function(k){kmeans(boston_scaled,k)$tot.withinss})
qplot(x=1:k_max,y=twcss,geom='line')
km=kmeans(boston_scaled,centers=2)
pairs(boston_scaled,col=km$cluster)
pairs(boston_scaled,col=km$cluster)
pairs(boston_scaled[1:5],col=km$cluster)
library(MASS)
library(corrplot)
library(tidyr)
library(dplyr)
library(ggplot2)
data("Boston")
str(Boston)
dim(Boston)
cor_matrix<-cor(Boston) %>% round(2)
corrplot(cor_matrix, method="circle",type='upper',cl.pos='b',tl.pos='d',tl.cex=0.6)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled=as.data.frame(boston_scaled)
bins=quantile(boston_scaled$crim)
crime=cut(boston_scaled$crim, breaks = bins, include.lowest = TRUE, label = c('low','med_low','med_high','high'))
table(crime)
boston_scaled=select(boston_scaled, -crim)
boston_scaled=data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- select(test, -crime)
lda.fit <- lda(crime~., data = train)
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2,col=classes,pch=classes)
lda.arrows(lda.fit, myscale = 3)
lda.pred=predict(lda.fit,newdata=test)
table(correct=correct_classes,predicted=lda.pred$class) %>% addmargins
correct=c(16,23,13,26)
correct=c(correct,sum(correct))
sumdata=c(27,30,18,27)
sumdata=c(sumdata,sum(sumdata))
index=c('low','med_low','med_high','high','sum')
t=data.frame(correct=index,predict=correct,sum=sumdata)
t$percentage=t$predict/t$sum
t
data('Boston')
boston_scaled=scale(Boston)
dist_eu=dist(boston_scaled,method='euclidean')
summary(dist_eu)
dist_man=dist(boston_scaled,method='manhattan')
summary(dist_man)
km=kmeans(boston_scaled,centers = 3)
pairs(boston_scaled,col=km$cluster)
set.seed(123)
k_max=10
twcss=sapply(1:k_max,function(k){kmeans(boston_scaled,k)$tot.withinss})
qplot(x=1:k_max,y=twcss,geom='line')
km=kmeans(boston_scaled,centers=2)
pairs(boston_scaled,col=km$cluster)
library(MASS)
library(corrplot)
library(tidyr)
library(dplyr)
library(ggplot2)
data("Boston")
str(Boston)
dim(Boston)
cor_matrix<-cor(Boston) %>% round(2)
corrplot(cor_matrix, method="circle",type='upper',cl.pos='b',tl.pos='d',tl.cex=0.6)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled=as.data.frame(boston_scaled)
bins=quantile(boston_scaled$crim)
crime=cut(boston_scaled$crim, breaks = bins, include.lowest = TRUE, label = c('low','med_low','med_high','high'))
table(crime)
boston_scaled=select(boston_scaled, -crim)
boston_scaled=data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- select(test, -crime)
lda.fit <- lda(crime~., data = train)
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2,col=classes,pch=classes)
lda.arrows(lda.fit, myscale = 3)
lda.pred=predict(lda.fit,newdata=test)
table(correct=correct_classes,predicted=lda.pred$class) %>% addmargins
correct=c(16,23,13,26)
correct=c(correct,sum(correct))
sumdata=c(27,30,18,27)
sumdata=c(sumdata,sum(sumdata))
index=c('low','med_low','med_high','high','sum')
t=data.frame(correct=index,predict=correct,sum=sumdata)
t$percentage=t$predict/t$sum
t
data('Boston')
boston_scaled=scale(Boston)
dist_eu=dist(boston_scaled,method='euclidean')
summary(dist_eu)
dist_man=dist(boston_scaled,method='manhattan')
summary(dist_man)
km=kmeans(boston_scaled,centers = 3)
pairs(boston_scaled,col=km$cluster)
set.seed(123)
k_max=10
twcss=sapply(1:k_max,function(k){kmeans(boston_scaled,k)$tot.withinss})
qplot(x=1:k_max,y=twcss,geom='line')
km=kmeans(boston_scaled,centers=2)
pairs(boston_scaled,col=km$cluster)
library(MASS)
library(corrplot)
library(tidyr)
library(dplyr)
library(ggplot2)
data("Boston")
str(Boston)
dim(Boston)
cor_matrix<-cor(Boston) %>% round(2)
corrplot(cor_matrix, method="circle",type='upper',cl.pos='b',tl.pos='d',tl.cex=0.6)
boston_scaled <- scale(Boston)
summary(boston_scaled)
boston_scaled=as.data.frame(boston_scaled)
bins=quantile(boston_scaled$crim)
crime=cut(boston_scaled$crim, breaks = bins, include.lowest = TRUE, label = c('low','med_low','med_high','high'))
table(crime)
boston_scaled=dplyr::select(boston_scaled, -crim)
boston_scaled=data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.fit <- lda(crime~., data = train)
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2,col=classes,pch=classes)
lda.arrows(lda.fit, myscale = 3)
lda.pred=predict(lda.fit,newdata=test)
table(correct=correct_classes,predicted=lda.pred$class) %>% addmargins
correct=c(16,23,13,26)
correct=c(correct,sum(correct))
sumdata=c(27,30,18,27)
sumdata=c(sumdata,sum(sumdata))
index=c('low','med_low','med_high','high','sum')
t=data.frame(correct=index,predict=correct,sum=sumdata)
t$percentage=t$predict/t$sum
t
data('Boston')
boston_scaled=scale(Boston)
dist_eu=dist(boston_scaled,method='euclidean')
summary(dist_eu)
dist_man=dist(boston_scaled,method='manhattan')
summary(dist_man)
km=kmeans(boston_scaled,centers = 3)
pairs(boston_scaled,col=km$cluster)
set.seed(123)
k_max=10
twcss=sapply(1:k_max,function(k){kmeans(boston_scaled,k)$tot.withinss})
qplot(x=1:k_max,y=twcss,geom='line')
km=kmeans(boston_scaled,centers=2)
pairs(boston_scaled,col=km$cluster)
# Read the human data
#human=read.table('
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
hd
head(hd)
source('~/IODS_course/IODS-project/data/creat_human.R', echo=TRUE)
#head(gii)
head(gii)
source('~/IODS_course/IODS-project/data/creat_human.R', echo=TRUE)
head(hd)
head(gii)
colnames(hd)
colnames_hd=colnames(hd)
colnames_hd[3]=HDI
colnames_hd[3]='HDI'
source('~/IODS_course/IODS-project/data/creat_human.R', echo=TRUE)
head(hd)
colnames(gii)
source('~/IODS_course/IODS-project/data/creat_human.R', echo=TRUE)
names(gii)
# Calculate the ratio of female and male populations with secondary education and labour force participation in each country
gii=mutate(gii,Edu2.FM=Edu2.F/Edu2.M,Labo.FM=Labo.F/Labo.M)
gii
dim(hd)
dim(gii)
# Join the two datasets
human=inner_join(hd,gii,by='Country')
source('~/IODS_course/IODS-project/data/creat_human.R', echo=TRUE)
tail(human)
summary(human)
human = read.table('/home/xiaodong/IODS_course/IODS-project/data/human.txt',sep='\t',header = TRUE)
str(human)
dim(human)
head(human)
head(hd)
# Read the human development data
#human=read.table('
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
head(hd)
# Read the Gender inequality data
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
head(gii)
human = read.table('/home/xiaodong/IODS_course/IODS-project/data/human.txt',sep='\t',header = TRUE)
hean(human)
head(human)
library(GGally)
human = read.table('/home/xiaodong/IODS_course/IODS-project/data/human.txt',sep='\t',header = TRUE)
str(human)
dim(human)
ggpairs(human)
cor(human) %>% corrplot(type='upper')
cor_matrix=cor(human)
corrplot(cor_matrix,type='upper')
library(corrplot)
corrplot(cor_matrix,type='upper')
pca_human=prcomp(human)
biplot(pca_human,choices=1:2,cex=c(0.8,1),col=c('grey40','deeppink2'))
biplot(pca_human,choices=1:2,col=c('grey40','deeppink2'))
biplot(pca_human,choices=1:2,cex=c(0.8,1))
?biplot
biplot(pca_human,choices=1:2)
biplot(pca_human,choices=1:2,cex=c(0.8,1))
human_std=scale(human)
pca_human=prcomp(human_std)
biplot(pca_human,choices = 1:2,cex=c(0.8,1))
pca_human=prcomp(human)
s=summary(pca_human)
pca_pr=round(100*s$importance[2,],digits=1)
pc_lab=paste0(names(pca_pr),'(',pca_pr,'%)')
biplot(pca_human,choices=1:2,cex=c(0.8,1),xlab=pc_lab[1],ylab=pc_lab[2])
human_std=scale(human)
pca_human=prcomp(human_std)
s=summary(pca_human)
pca_pr=round(100*s$importance[2,],digits=1)
pc_lab=paste0(names(pca_pr),'(',pca_pr,'%)')
biplot(pca_human,choices = 1:2,cex=c(0.8,1),xlab=pc_lab[1],ylab=pc_lab[2])
pca_human=prcomp(human)
s=summary(pca_human)
s
pca_pr=round(100*s$importance[2,],digits=1)
pc_lab=paste0(names(pca_pr),'(',pca_pr,'%)')
biplot(pca_human,choices=1:2,cex=c(0.8,1),xlab=pc_lab[1],ylab=pc_lab[2])
human_std=scale(human)
pca_human=prcomp(human_std)
s=summary(pca_human)
s
pca_pr=round(100*s$importance[2,],digits=1)
pc_lab=paste0(names(pca_pr),'(',pca_pr,'%)')
biplot(pca_human,choices = 1:2,cex=c(0.8,1),xlab=pc_lab[1],ylab=pc_lab[2])
head(human_std)
install.packages("FactoMineR")
install.packages("rmarkdown")
library(FactoMineR)
library(ggplot2)
library(dplyr)
library(tidyr)
data('tea')
dim(tea)
tea
str(tea)
dim(tea)
keep_columns=c('Tea','How','how','sugar','where','lunch')
tea_time=select(tea,one_of(keep_columns))
summary(tea_time)
str(tea_time)
gather(tea_time) %>% ggplot(aes(value))+geom_bar()+facet_wrap('key',scales='free')+theme(axis.text=element_text(angle=45,hjust = 1,size=8))
mca=MCA(tea_time,graph=FALSE)
summary(mca)
plot(mca,invisible=c('ind'),habillage='quali')
install.packages("readr")
library(GGally)
library(corrplot)
human = read.table('/home/xiaodong/IODS_course/IODS-final/Data/human.txt',sep='\t',header = TRUE)
str(human)
dim(human)
ggpairs(human)
cor_matrix=cor(human)
corrplot(cor_matrix,type='lower')
life_model=lm(Life.Exp~Edu2.FM + Labo.FM + Edu.Exp + GNI + Mat.Mor + Ado.Birth + Parli.F, data=human)
summary(life_model)
life_model=lm(Life.Exp~Edu.Exp + GNI + Mat.Mor, data=human)
summary(life_model)
plot(life_model, which = c(1,2,5))
human
human.Life.Exp
human$Life.Exp
norm(human$Life.Exp)
mean(human$Life.Exp)
source('~/IODS_course/IODS-final/Data/creat_human.R', echo=TRUE)
# Scale the whole dataset
human_scaled=scale(human)
sumamry(human_scaled)
summary(human_scaled)
human = read.table('/home/xiaodong/IODS_course/IODS-final/Data/human.txt',sep='\t',header = TRUE)
human_scaled=scale(human)
class(human_scaled)
human_scaled=as.data.frame(human_scaled)
class(human_scaled)
summary(human_scaled)
bins=quantile(human_scaled$Life.Exp)
Qua.life=cut(human_scaled$Life.Exp, breaks=bins, include.lowest = True, label=c('short','med_short','med_long','long'))
Qua.life=cut(human_scaled$Life.Exp, breaks=bins, include.lowest = TRUE, label=c('short','med_short','med_long','long'))
table(Qua.life)
human_scaled=dplyr::select(human_scaled,-Life.Exp)
human_scaled=data.frame(human_scaled,Qua.life)
head(human_scaled)
library(GGally)
library(corrplot)
library(ggplot2)
human = read.table('/home/xiaodong/IODS_course/IODS-final/Data/human.txt',sep='\t',header = TRUE)
str(human)
dim(human)
ggpairs(human)
cor_matrix=cor(human)
corrplot(cor_matrix,type='lower')
life_model=lm(Life.Exp~Edu2.FM + Labo.FM + Edu.Exp + GNI + Mat.Mor + Ado.Birth + Parli.F, data=human)
summary(life_model)
life_model=lm(Life.Exp~Edu.Exp + GNI + Mat.Mor, data=human)
summary(life_model)
plot(life_model, which = c(1,2,5))
human = read.table('/home/xiaodong/IODS_course/IODS-final/Data/human_long_life.txt',sep='\t',header = TRUE)
long_model=glm(Long.life~Edu2.FM + Labo.FM + Edu.Exp + GNI + Mat.Mor + Ado.Birth + Parli.F, data=human)
source('~/IODS_course/IODS-final/Data/creat_human.R', echo=TRUE)
library(GGally)
library(corrplot)
library(ggplot2)
human = read.table('/home/xiaodong/IODS_course/IODS-final/Data/human.txt',sep='\t',header = TRUE)
str(human)
dim(human)
ggpairs(human)
cor_matrix=cor(human)
corrplot(cor_matrix,type='lower')
life_model=lm(Life.Exp~Edu2.FM + Labo.FM + Edu.Exp + GNI + Mat.Mor + Ado.Birth + Parli.F, data=human)
summary(life_model)
life_model=lm(Life.Exp~Edu.Exp + GNI + Mat.Mor, data=human)
summary(life_model)
plot(life_model, which = c(1,2,5))
human = read.table('/home/xiaodong/IODS_course/IODS-final/Data/human_long_life.txt',sep='\t',header = TRUE)
long_model=glm(Long.life~Edu2.FM + Labo.FM + Edu.Exp + GNI + Mat.Mor + Ado.Birth + Parli.F, data=human)
head(human)
# Save data with logical column 'Long.life'
write.table(human_long_life, file='human_long_life.txt',row.names=T,sep='\t')
human_long_life
source('~/IODS_course/IODS-final/Data/creat_human.R', echo=TRUE)
library(GGally)
library(corrplot)
library(ggplot2)
human = read.table('/home/xiaodong/IODS_course/IODS-final/Data/human.txt',sep='\t',header = TRUE)
str(human)
dim(human)
ggpairs(human)
cor_matrix=cor(human)
corrplot(cor_matrix,type='lower')
life_model=lm(Life.Exp~Edu2.FM + Labo.FM + Edu.Exp + GNI + Mat.Mor + Ado.Birth + Parli.F, data=human)
summary(life_model)
life_model=lm(Life.Exp~Edu.Exp + GNI + Mat.Mor, data=human)
summary(life_model)
plot(life_model, which = c(1,2,5))
human = read.table('/home/xiaodong/IODS_course/IODS-final/Data/human_long_life.txt',sep='\t',header = TRUE)
long_model=glm(Long.life~Edu2.FM + Labo.FM + Edu.Exp + GNI + Mat.Mor + Ado.Birth + Parli.F, data=human)
summary(long_model)
long_model=glm(Long.life~Edu.Exp+GNI+Parli.F,data=human)
summary(long_model)
box_edu=ggplot(human,aes(x=Long.life,y=Edu.Exp))+geom_boxplot(); box_edu
box_gni=ggplot(human,aes(x=Long.life,y=GNI))+geom_boxplot(); box_gni
box_par=ggplot(human,aes(x=Long.life,y=Parli.F))+geom_boxplot(); box_par
OR=coef(long_model) %>% exp
CI=confint(long_model) %>% exp
cbind(OR,CI)
human = read.table('/home/xiaodong/IODS_course/IODS-final/Data/human.txt',sep='\t',header = TRUE)
human_scaled=scale(human)
human_scaled=as.data.frame(human_scaled)
bins=quantile(human_scaled$Life.Exp)
Qua.life=cut(human_scaled$Life.Exp, breaks=bins, include.lowest = TRUE, label=c('short','med_short','med_long','long'))
table(Qua.life)
human_scaled=dplyr::select(human_scaled,-Life.Exp)
human_scaled=data.frame(human_scaled,Qua.life)
head(human_scaled)
lda.fit=lda(Qua.life~.,data=human_scaled)
library(MASS)
lda.fit=lda(Qua.life~.,data=human_scaled)
lda.fit
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
plot(lda.fit, dimen=2, col=as.numeric(human_scaled$Qua.life), pch=human_scaled$Qua.life)
lda.arrows(lda.fit, myscale = 3)
plot(lda.fit, dimen=2, col=as.numeric(human_scaled$Qua.life), pch=human_scaled$Qua.life)
plot(lda.fit, dimen=2, col=as.numeric(human_scaled$Qua.life), pch=as.numeric(human_scaled$Qua.life))
lda.arrows(lda.fit, myscale = 3)
lda.arrows(lda.fit)
plot(lda.fit, dimen=2, col=as.numeric(human_scaled$Qua.life), pch=as.numeric(human_scaled$Qua.life))
lda.arrows(lda.fit)
plot(lda.fit, dimen=2, col=as.numeric(human_scaled$Qua.life), pch=as.numeric(human_scaled$Qua.life))
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
plot(lda.fit, dimen=2, col=as.numeric(human_scaled$Qua.life), pch=as.numeric(human_scaled$Qua.life))
lda.arrows(lda.fit)
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
plot(lda.fit, dimen=2, col=as.numeric(human_scaled$Qua.life), pch=as.numeric(human_scaled$Qua.life))
lda.arrows(lda.fit)
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
plot(lda.fit, dimen=2, col=as.numeric(human_scaled$Qua.life), pch=as.numeric(human_scaled$Qua.life))
lda.arrows(lda.fit,myscale = 5)
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
plot(lda.fit, dimen=2, col=as.numeric(human_scaled$Qua.life), pch=as.numeric(human_scaled$Qua.life))
lda.arrows(lda.fit,myscale = 4)
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
plot(lda.fit, dimen=2, col=as.numeric(human_scaled$Qua.life), pch=as.numeric(human_scaled$Qua.life))
lda.arrows(lda.fit,myscale = 3)
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "black", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
plot(lda.fit, dimen=2, col=as.numeric(human_scaled$Qua.life), pch=as.numeric(human_scaled$Qua.life))
lda.arrows(lda.fit,myscale = 3)
